{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\PostCard.js\";\nimport { Button, Card, Popover } from 'antd';\nimport { RetweetOutlined, EllipsisOutlined, HeartOutlined, MessageOutlined } from '@ant-design';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      corver: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 43\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nockname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nPostCard.proptypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/PostCard.js"],"names":["Button","Card","Popover","RetweetOutlined","EllipsisOutlined","HeartOutlined","MessageOutlined","useSelector","PropTypes","Avatar","PostCard","post","me","state","user","id","Images","User","nockname","nickname","content","proptypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,QAAoC,MAApC;AACA,SAAQC,eAAR,EAAwBC,gBAAxB,EAA0CC,aAA1C,EAAyDC,eAAzD,QAAgF,aAAhF;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAKL,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAtB;AACA,QAAMC,EAAE,GAACH,EAAD,aAACA,EAAD,uBAACA,EAAE,CAAEG,EAAb;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,MAAM,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAAI,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD9B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADK,eAEL,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cAHK,eAIL,QAAC,OAAD;AAAoB,QAAA,OAAO,eACvB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACKD,EAAE,IAAEJ,IAAI,CAACM,IAAL,CAAUF,EAAV,KAAeA,EAAnB,gBACG;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADH,gBAKC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA,+BAUI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAVJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cAJK,CAFb;AAAA,6BAoBI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASJ,IAAI,CAACM,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADZ;AAEI,QAAA,KAAK,EAAEP,IAAI,CAACM,IAAL,CAAUE,QAFrB;AAGI,QAAA,WAAW,EAAER,IAAI,CAACS;AAHtB;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgCH,CAnCD;;AAoCAV,QAAQ,CAACW,SAAT,GAAmB;AACfV,EAAAA,IAAI,EAACH,SAAS,CAACc,KAAV,CAAgB;AACjBP,IAAAA,EAAE,EAAEP,SAAS,CAACe,MADG;AAEjBT,IAAAA,IAAI,EAACN,SAAS,CAACgB,MAFE;AAGjBJ,IAAAA,OAAO,EAAEZ,SAAS,CAACiB,MAHF;AAIjBC,IAAAA,SAAS,EAAElB,SAAS,CAACgB,MAJJ;AAKjBG,IAAAA,QAAQ,EAACnB,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACgB,MAA5B,CALQ;AAMjBR,IAAAA,MAAM,EAACR,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACgB,MAA5B;AANU,GAAhB,EAOFK;AARY,CAAnB;AAYA,eAAenB,QAAf","sourcesContent":["import {Button, Card, Popover} from 'antd';\r\nimport {RetweetOutlined,EllipsisOutlined, HeartOutlined, MessageOutlined } from '@ant-design';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nconst PostCard=({post})=>{\r\n    const {me}=useSelector((state)=>state.user);\r\n    const id=me?.id;\r\n    return(\r\n        <>\r\n            <Card\r\n                corver={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    <HeartOutlined key=\"heart\"/>,\r\n                    <MessageOutlined key=\"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id&&post.User.id===id ?(\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button type=\"danger\">삭제</Button>\r\n                                </>)\r\n                            : <Button>신고</Button> }\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nockname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {/*<CommentForm/>\r\n            <Comments/>*/}\r\n        </>\r\n    )\r\n}\r\nPostCard.proptypes={\r\n    post:PropTypes.shape({\r\n        id: PropTypes.number,\r\n        user:PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired\r\n}\r\n\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}