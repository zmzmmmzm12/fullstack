{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Card, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, EllipsisOutlined, HeartOutlined, MessageOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport { useCallback, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/postReducer';\nimport FollowButton from './FollowButton';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.userReducer;\n  }),\n      me = _useSelector.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      removePostLoading = _useSelector2.removePostLoading;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 31\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, _this)],\n      extra: /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"ZXeUIXI5yKCwXl5+NXv3XaWVupc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.proptypes = {\n  //object로 한번에 묶는 것보다 shape로 풀어서 써주는게 좋음\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/PostCard.js"],"names":["Button","Card","Popover","Avatar","List","Comment","RetweetOutlined","EllipsisOutlined","HeartOutlined","MessageOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","useCallback","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","state","userReducer","me","id","postReducer","removePostLoading","dispatch","liked","setLiked","onToggleLike","prev","onToggleComment","setCommentFormOpened","onRemovePost","type","data","commentFormOpened","marginBottom","Images","User","nickname","content","Comments","length","item","proptypes","shape","number","user","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import {Button, Card, Popover, Avatar, List, Comment} from 'antd';\r\nimport {\r\n    RetweetOutlined,EllipsisOutlined, HeartOutlined, MessageOutlined, HeartTwoTone\r\n } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\nimport {useCallback, useState} from 'react';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/postReducer';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst PostCard=({post})=>{\r\n    const {me}=useSelector((state)=>state.userReducer);\r\n    const id=me?.id;\r\n    const {removePostLoading} = useSelector((state)=>state.postReducer);\r\n    const dispatch=useDispatch();\r\n    const [liked,setLiked]=useState(false);\r\n    const onToggleLike=useCallback(()=>{\r\n        setLiked((prev)=>!prev);\r\n    },[])\r\n    const onToggleComment=useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev);\r\n    },[])\r\n\r\n    const onRemovePost=useCallback(()=>{\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id\r\n        })\r\n    }, [])\r\n\r\n    const [commentFormOpened, setCommentFormOpened]=useState(false);\r\n    return(\r\n        <div style={{marginBottom:20}}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor='#eb2f96' key=\"heart\" onClick={onToggleLike}/>\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id&&post.User.id===id ?(\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                </>)\r\n                            : <Button>신고</Button> }\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n                extra={<FollowButton post={post}/>}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content}/>}\r\n                />\r\n            </Card>\r\n            {commentFormOpened &&\r\n            <div>\r\n                <CommentForm post={post}/>\r\n                <List \r\n                    header={`${post.Comments.length}개의 댓글`}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={post.Comments}\r\n                    renderItem={(item)=>(\r\n                        <li>\r\n                            <Comment\r\n                                author={item.User.nickname}\r\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                content = {item.content}\r\n                            />\r\n                        </li>\r\n                    )}\r\n                />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nPostCard.proptypes={\r\n    //object로 한번에 묶는 것보다 shape로 풀어서 써주는게 좋음\r\n    post:PropTypes.shape({\r\n        id: PropTypes.number,\r\n        user:PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired\r\n}\r\n\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}