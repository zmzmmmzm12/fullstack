{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { useEffect } from \"react\";\nimport { LOAD_POST_REQUEST } from \"../reducers/postReducer\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      tyle: LOAD_POST_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    }; //add해주면 항상 리턴해서 remove필요\n  }, []);\n  var isLoggedIn = useSelector(function (state) {\n    return state.userReducer.isLoggedIn;\n  }); //위아래 둘다 최적화부분만 빼면 똑같은 소스임\n\n  var mainPosts = useSelector(function (state) {\n    return state.postReducer.mainPosts;\n  });\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 36\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"Aw6F9k1tT5tnRctTMa5MKpAFGD4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/pages/index.js"],"names":["AppLayout","useDispatch","useSelector","PostCard","PostForm","useEffect","LOAD_POST_REQUEST","Home","dispatch","tyle","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","isLoggedIn","state","userReducer","mainPosts","postReducer","map","post","id"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,IAAMC,IAAI,GAAE,SAANA,IAAM,GAAI;AAAA;;AACZ,MAAMC,QAAQ,GAACP,WAAW,EAA1B;AACAI,EAAAA,SAAS,CAAC,YAAI;AACVG,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAOAD,EAAAA,SAAS,CAAC,YAAI;AACV,aAASK,QAAT,GAAmB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA2BC,QAAQ,CAACC,eAAT,CAAyBC,YAApD,EAAkEF,QAAQ,CAACC,eAAT,CAAyBE,YAA3F;AACH;;AACDL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCT,QAAjC;AACA,WAAO,YAAI;AACPG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCV,QAApC;AACH,KAFD,CALU,CAOR;AACL,GARQ,EAQN,EARM,CAAT;AAUA,MAAMW,UAAU,GAACnB,WAAW,CAAC,UAACoB,KAAD;AAAA,WAASA,KAAK,CAACC,WAAN,CAAkBF,UAA3B;AAAA,GAAD,CAA5B,CAnBY,CAmByD;;AACrE,MAAMG,SAAS,GAACtB,WAAW,CAAC,UAACoB,KAAD;AAAA,WAASA,KAAK,CAACG,WAAN,CAAkBD,SAA3B;AAAA,GAAD,CAA3B;AACA,sBACI,QAAC,SAAD;AAAA,eACKH,UAAU,iBAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADjB,EAEKG,SAAS,CAACE,GAAV,CAAc,UAACC,IAAD;AAAA,0BAAQ,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,eAAR;AAAA,KAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CA3BD;;GAAMrB,I;UACaN,W,EAkBEC,W,EACDA,W;;;KApBdK,I;AA6BN,eAAeA,IAAf","sourcesContent":["import AppLayout from \"../components/AppLayout\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport { useEffect } from \"react\";\r\nimport { LOAD_POST_REQUEST } from \"../reducers/postReducer\";\r\n\r\nconst Home= ()=>{\r\n    const dispatch=useDispatch();\r\n    useEffect(()=>{\r\n        dispatch({\r\n            tyle: LOAD_POST_REQUEST\r\n        })\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        function onScroll(){\r\n            console.log(window.scrollY,document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n        }\r\n        window.addEventListener('scroll',onScroll);\r\n        return ()=>{\r\n            window.removeEventListener('scroll',onScroll);\r\n        } //add해주면 항상 리턴해서 remove필요\r\n    }, []);\r\n    \r\n    const isLoggedIn=useSelector((state)=>state.userReducer.isLoggedIn); //위아래 둘다 최적화부분만 빼면 똑같은 소스임\r\n    const mainPosts=useSelector((state)=>state.postReducer.mainPosts);\r\n    return(\r\n        <AppLayout>\r\n            {isLoggedIn&&<PostForm/>}\r\n            {mainPosts.map((post)=><PostCard key={post.id} post={post}/>)}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}