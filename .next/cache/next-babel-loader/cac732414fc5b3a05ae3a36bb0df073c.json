{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper'; //백엔드한테 데이터 구조 미리 받아놓기\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\n    }, {\n      src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\n    }, {\n      src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이네요'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '고양이'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/reducers/postReducer.js"],"names":["HYDRATE","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","postReducer","state","action"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB,C,CAGA;;AACA,OAAO,MAAMC,YAAY,GAAC;AACtBC,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,EAAE,EAAC,CADI;AAEPC,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAFE;AAMPC,IAAAA,OAAO,EAAE,sBANF;AAOPC,IAAAA,MAAM,EAAC,CAAC;AACJC,MAAAA,GAAG,EAAC;AADA,KAAD,EAGP;AACIA,MAAAA,GAAG,EAAE;AADT,KAHO,EAMP;AACIA,MAAAA,GAAG,EAAE;AADT,KANO,CAPA;AAgBPC,IAAAA,QAAQ,EAAC,CAAC;AACNL,MAAAA,IAAI,EAAC;AACDC,QAAAA,QAAQ,EAAE;AADT,OADC;AAINC,MAAAA,OAAO,EAAE;AAJH,KAAD,EAMT;AACIF,MAAAA,IAAI,EAAC;AACDC,QAAAA,QAAQ,EAAE;AADT,OADT;AAIIC,MAAAA,OAAO,EAAE;AAJb,KANS;AAhBF,GAAD,CADY;AA8BtBI,EAAAA,UAAU,EAAC,EA9BW;AA+BtBC,EAAAA,SAAS,EAAC;AA/BY,CAAnB;AAkCP,MAAMC,QAAQ,GAAC,UAAf;AACA,OAAO,MAAMC,OAAO,GAAC;AACjBC,EAAAA,IAAI,EAAEF;AADW,CAAd;AAIP,MAAMG,SAAS,GAAC;AACZZ,EAAAA,EAAE,EAAC,CADS;AAEZG,EAAAA,OAAO,EAAC,OAFI;AAGZF,EAAAA,IAAI,EAAC;AACDD,IAAAA,EAAE,EAAC,CADF;AAEDE,IAAAA,QAAQ,EAAC;AAFR,GAHO;AAOZE,EAAAA,MAAM,EAAC,EAPK;AAQZE,EAAAA,QAAQ,EAAE;AARE,CAAhB;;AAWA,MAAMO,WAAW,GAAC,CAACC,KAAK,GAAChB,YAAP,EAAoBiB,MAApB,KAA6B;AAC3C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAKF,QAAL;AACI,6CACOK,KADP;AAEIf,QAAAA,SAAS,EAAE,CAACa,SAAD,EAAY,GAAGE,KAAK,CAACf,SAArB,CAFf;AAGIS,QAAAA,SAAS,EAAC;AAHd;;AAMJ;AAAS,aAAOM,KAAP;AARb;AAUH,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\n\r\n\r\n//백엔드한테 데이터 구조 미리 받아놓기\r\nexport const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'제로초'\r\n        },\r\n        content: '첫번째 게시글 #해시태그 #익스프레스',\r\n        Images:[{\r\n            src:'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\r\n        },\r\n        {\r\n            src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\r\n        },\r\n        {\r\n            src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\r\n        }],\r\n        Comments:[{\r\n            User:{\r\n                nickname: 'nero'\r\n            },\r\n            content: '우와 개정판이네요'\r\n        },\r\n        {\r\n            User:{\r\n                nickname: 'hero'\r\n            },\r\n            content: '고양이'\r\n        }]\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false\r\n}\r\n\r\nconst ADD_POST='ADD_POST';\r\nexport const addPost={\r\n    type: ADD_POST,\r\n}\r\n\r\nconst dummyPost={\r\n    id:2,\r\n    content:'더미데이터',\r\n    User:{\r\n        id:1,\r\n        nickname:'제로초'\r\n    },\r\n    Images:[],\r\n    Comments: []\r\n}\r\n\r\nconst postReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                mainPosts: [dummyPost, ...state.mainPosts],\r\n                postAdded:true\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}