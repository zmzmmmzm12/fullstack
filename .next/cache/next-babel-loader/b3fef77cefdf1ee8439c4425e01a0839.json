{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\LoginForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useState, useMemo } from 'react';\nimport Link from 'next/link';\n\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: pw,\n    1: setPw\n  } = useState(''); //컴포넌트에 props로 넘기는 함수는 useCallback꼭 쓰기=>최적화\n\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangePw = useCallback(e => {\n    setPw(e.target.value);\n  }, []); //useMemo는 함수를 콜백함\n  //리랜더링 해줘도 최적화됨(jsx에 인라인으로 객체 넣으면 계속 랜더링되는 문제.)\n\n  const style = useMemo(() => ({\n    marginTop: 10\n  }), []);\n  const onSubmitForm = useCallback(() => {\n    //antd의 onFinish은 이미 prevent가 적용되어있으므로 안해줘도됨\n    console.log(id, pw);\n    setIsLoggedIn(true); //서버없이 가상의 스테이트로 로그인\n  }, [id, pw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onSubmitForn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: id,\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: pw,\n          onChange: onChangePw,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"Signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/LoginForm.js"],"names":["Form","Input","Button","useCallback","useState","useMemo","Link","LoginForm","setIsLoggedIn","id","setId","pw","setPw","onChangeId","e","target","value","onChangePw","style","marginTop","onSubmitForm","console","log","onSubmitForn"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,SAAS,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAC/B,QAAM;AAAA,OAACC,EAAD;AAAA,OAAIC;AAAJ,MAAWN,QAAQ,CAAC,EAAD,CAAzB;AACA,QAAM;AAAA,OAACO,EAAD;AAAA,OAAIC;AAAJ,MAAWR,QAAQ,CAAC,EAAD,CAAzB,CAF+B,CAI/B;;AACA,QAAMS,UAAU,GAACV,WAAW,CAAEW,CAAD,IAAK;AAC9BJ,IAAAA,KAAK,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH,GAF2B,EAEzB,EAFyB,CAA5B;AAGA,QAAMC,UAAU,GAACd,WAAW,CAAEW,CAAD,IAAK;AAC9BF,IAAAA,KAAK,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH,GAF2B,EAEzB,EAFyB,CAA5B,CAR+B,CAY/B;AACA;;AACA,QAAME,KAAK,GAACb,OAAO,CAAC,OAAK;AACjBc,IAAAA,SAAS,EAAC;AADO,GAAL,CAAD,EAEX,EAFW,CAAnB;AAIA,QAAMC,YAAY,GAAEjB,WAAW,CAAC,MAAI;AAChC;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYb,EAAZ,EAAeE,EAAf;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb,CAHgC,CAGX;AACxB,GAJ8B,EAI7B,CAACC,EAAD,EAAIE,EAAJ,CAJ6B,CAA/B;AAKA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEY,YAAhB;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAEd,EAA7B;AAAiC,UAAA,QAAQ,EAAEI,UAA3C;AAAuD,UAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,IAAI,EAAC,UAAjC;AAA4C,UAAA,KAAK,EAAEF,EAAnD;AAAuD,UAAA,QAAQ,EAAEM,UAAjE;AAA6E,UAAA,QAAQ;AAArF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,KAAK,EAAEC,KAAZ;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAA,iCAAoB;AAAA,mCAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH,CA3CD;;AA6CA,eAAeX,SAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport { useCallback, useState, useMemo } from 'react';\r\nimport Link from 'next/link';\r\n\r\nconst LoginForm=({setIsLoggedIn})=>{\r\n    const [id,setId]=useState('');\r\n    const [pw,setPw]=useState('');\r\n\r\n    //컴포넌트에 props로 넘기는 함수는 useCallback꼭 쓰기=>최적화\r\n    const onChangeId=useCallback((e)=>{\r\n        setId(e.target.value);\r\n    }, []);\r\n    const onChangePw=useCallback((e)=>{\r\n        setPw(e.target.value);\r\n    }, []);\r\n\r\n    //useMemo는 함수를 콜백함\r\n    //리랜더링 해줘도 최적화됨(jsx에 인라인으로 객체 넣으면 계속 랜더링되는 문제.)\r\n    const style=useMemo(()=>({\r\n            marginTop:10\r\n        }), []);\r\n\r\n    const onSubmitForm= useCallback(()=>{\r\n        //antd의 onFinish은 이미 prevent가 적용되어있으므로 안해줘도됨\r\n        console.log(id,pw);\r\n        setIsLoggedIn(true); //서버없이 가상의 스테이트로 로그인\r\n    },[id,pw]);\r\n    return(\r\n        <>\r\n            <Form onFinish={onSubmitForn}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={pw} onChange={onChangePw} required/>\r\n                </div>\r\n                <div style={style}>\r\n                    <button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</button>\r\n                    <Link href=\"Signup\"><a><Button>회원가입</Button></a></Link>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}