{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from '../reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      //console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,mBAAR,QAAiC,0BAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,QAAZ,QAAYA,QAAZ;AAAA,SAAyB,UAACC,IAAD;AAAA,WAAQ,UAACC,MAAD,EAAU;AAC9D;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAH+C;AAAA,GAAzB;AAAA,CAAvB;;AAKA,IAAMC,cAAc,GAAC,SAAfA,cAAe,GAAI;AACrB,MAAMC,cAAc,GAACR,oBAAoB,EAAzC;AACA,MAAMS,WAAW,GAAE,CAACD,cAAD,EAAgBN,gBAAhB,CAAnB;AACA,MAAMQ,QAAQ,GAAC,QACTb,OAAO,CAACD,eAAe,MAAf,SAAmBa,WAAnB,CAAD,CADE,GAETV,mBAAmB,CAACH,eAAe,MAAf,SAAmBa,WAAnB,CAAD,CAFzB;AAIA,MAAME,KAAK,GAAChB,WAAW,CAACG,OAAD,EAAUY,QAAV,CAAvB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAeJ,cAAc,CAACK,GAAf,CAAmBZ,QAAnB,CAAf;AACA,SAAOU,KAAP;AACH,CAVD;;AAYA,IAAMG,OAAO,GAAGpB,aAAa,CAACa,cAAD,EAAiB;AAACQ,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from '../reducers/rootReducer';\r\nimport {composeWithDevTools} from'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware=({dispatch, getState})=> (next)=>(action)=>{\r\n    //console.log(action);\r\n    return next(action);\r\n}\r\n\r\nconst configureStore=()=>{\r\n    const sagaMiddleware=createSagaMiddleware();\r\n    const middlewares= [sagaMiddleware,loggerMiddleware];\r\n    const enhancer=process.env.NODE_ENV==='production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n\r\n    const store=createStore(reducer, enhancer);\r\n    store.sagaTask=sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore, {debug:process.env.NODE_ENV==='development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}