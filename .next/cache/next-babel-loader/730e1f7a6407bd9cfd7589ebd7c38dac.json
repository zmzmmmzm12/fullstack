{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/postReducer';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$userReducer$me;\n\n    return (_state$userReducer$me = state.userReducer.me) === null || _state$userReducer$me === void 0 ? void 0 : _state$userReducer$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"grB1dgAAYOQQBljO+x9f/MnLEVg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/CommentForm.js"],"names":["Form","Input","Button","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","userReducer","me","postReducer","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,yBAApC;;AAEA,IAAMC,WAAW,GAAC,SAAZA,WAAY,OAAU;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACxB,MAAMC,QAAQ,GAACL,WAAW,EAA1B;AAEA,MAAMM,EAAE,GAACL,WAAW,CAAC,UAACM,KAAD;AAAA;;AAAA,oCAASA,KAAK,CAACC,WAAN,CAAkBC,EAA3B,0DAAS,sBAAsBH,EAA/B;AAAA,GAAD,CAApB;;AAHwB,qBAIkBL,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACG,WAAf;AAAA,GAAD,CAJ7B;AAAA,MAIjBC,cAJiB,gBAIjBA,cAJiB;AAAA,MAIDC,iBAJC,gBAIDA,iBAJC;;AAAA,kBAKiCd,QAAQ,CAAC,EAAD,CALzC;AAAA;AAAA,MAKjBe,WALiB;AAAA,MAKJC,mBALI;AAAA,MAKiBC,cALjB;;AAOxBlB,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGc,cAAH,EAAkB;AACdI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,MAAMK,eAAe,GAACpB,WAAW,CAAC,YAAI;AAClCS,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAACf,mBADA;AAELgB,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAO,EAACN,WAAT;AAAqBO,QAAAA,MAAM,EAAChB,IAAI,CAACE,EAAjC;AAAoCe,QAAAA,MAAM,EAACf;AAA3C;AAFA,KAAD,CAAR;AAKH,GANgC,EAM9B,CAACO,WAAD,EAAcP,EAAd,CAN8B,CAAjC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACM,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEV,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAC,mBAAM;AAAP,SAA9B;AAA+C,QAAA,QAAQ,EAAC,QAAxD;AAAiE,QAAA,OAAO,EAAEF,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA5BD;;GAAMT,W;UACaH,W,EAENC,W,EACiCA,W,EACeH,Q;;;KALvDK,W;AA8BNA,WAAW,CAACqB,SAAZ,GAAsB;AAClBpB,EAAAA,IAAI,EAAEL,SAAS,CAAC0B,MAAV,CAAiBC;AADL,CAAtB;AAIA,eAAevB,WAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport { useCallback,useEffect } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/postReducer';\r\n\r\nconst CommentForm=({post})=>{\r\n    const dispatch=useDispatch();\r\n\r\n    const id=useSelector((state)=>state.userReducer.me?.id);\r\n    const {addCommentDone, addCommentLoading}=useSelector((state)=>state.postReducer);\r\n    const [commentText, onChangeCommentText, setCommentText]=useInput('');\r\n    \r\n    useEffect(()=>{\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone])\r\n\r\n    const onSubmitComment=useCallback(()=>{\r\n        dispatch({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:{content:commentText,postId:post.id,userId:id}\r\n            \r\n        })\r\n    }, [commentText, id]);\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position:'relative', margin: 0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" loading={addCommentLoading} >삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes={\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}