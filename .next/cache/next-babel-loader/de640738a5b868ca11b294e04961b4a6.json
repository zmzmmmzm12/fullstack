{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\LoginForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useState, useMemo } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers/rootReducer';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch(); //컴포넌트에 props로 넘기는 함수는 useCallback꼭 쓰기=>최적화\n\n  const [id, onChangeId] = useInput('');\n  const [pw, onChangePw] = useInput(''); //useMemo는 함수를 콜백함. style을 useMemo로 만드는 대신 css를 따로 추가해줘도됨\n  //리랜더링 해줘도 최적화됨(jsx에 인라인으로 객체 넣으면 계속 랜더링되는 문제.)\n\n  const style = useMemo(() => ({\n    marginTop: 10\n  }), []);\n  const formWrapper = useMemo(() => ({\n    padding: 10\n  }), []);\n  const onSubmitForm = useCallback(() => {\n    //antd의 onFinish은 이미 prevent가 적용되어있으므로 안해줘도됨\n    console.log(id, pw);\n    dispatch(loginAction({\n      id,\n      pw\n    }));\n  }, [id, pw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onSubmitForm,\n      style: formWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: id,\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: pw,\n          onChange: onChangePw,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"Signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/LoginForm.js"],"names":["Form","Input","Button","useCallback","useState","useMemo","Link","PropTypes","useInput","useDispatch","loginAction","LoginForm","dispatch","id","onChangeId","pw","onChangePw","style","marginTop","formWrapper","padding","onSubmitForm","console","log"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,MAAMC,SAAS,GAAC,MAAI;AAChB,QAAMC,QAAQ,GAACH,WAAW,EAA1B,CADgB,CAGhB;;AACA,QAAM,CAACI,EAAD,EAAIC,UAAJ,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACO,EAAD,EAAIC,UAAJ,IAAgBR,QAAQ,CAAC,EAAD,CAA9B,CALgB,CAOhB;AACA;;AACA,QAAMS,KAAK,GAACZ,OAAO,CAAC,OAAK;AACrBa,IAAAA,SAAS,EAAC;AADW,GAAL,CAAD,EAEf,EAFe,CAAnB;AAIA,QAAMC,WAAW,GAACd,OAAO,CAAC,OAAK;AAC3Be,IAAAA,OAAO,EAAC;AADmB,GAAL,CAAD,EAErB,EAFqB,CAAzB;AAKA,QAAMC,YAAY,GAAElB,WAAW,CAAC,MAAI;AAChC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ,EAAeE,EAAf;AACAH,IAAAA,QAAQ,CAACF,WAAW,CAAC;AAACG,MAAAA,EAAD;AAAIE,MAAAA;AAAJ,KAAD,CAAZ,CAAR;AACH,GAJ8B,EAI7B,CAACF,EAAD,EAAIE,EAAJ,CAJ6B,CAA/B;AAKA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAA8B,MAAA,KAAK,EAAEF,WAArC;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAEN,EAA7B;AAAiC,UAAA,QAAQ,EAAEC,UAA3C;AAAuD,UAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,IAAI,EAAC,UAAjC;AAA4C,UAAA,KAAK,EAAEC,EAAnD;AAAuD,UAAA,QAAQ,EAAEC,UAAjE;AAA6E,UAAA,QAAQ;AAArF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,KAAK,EAAEC,KAAZ;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAA,iCAAoB;AAAA,mCAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH,CA3CD;;AA8CA,eAAeN,SAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport { useCallback, useState, useMemo } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from '../hooks/useInput';\r\nimport {useDispatch} from 'react-redux';\r\nimport {loginAction} from '../reducers/rootReducer';\r\n\r\nconst LoginForm=()=>{\r\n    const dispatch=useDispatch();\r\n\r\n    //컴포넌트에 props로 넘기는 함수는 useCallback꼭 쓰기=>최적화\r\n    const [id,onChangeId]=useInput('');\r\n    const [pw,onChangePw]=useInput('');\r\n\r\n    //useMemo는 함수를 콜백함. style을 useMemo로 만드는 대신 css를 따로 추가해줘도됨\r\n    //리랜더링 해줘도 최적화됨(jsx에 인라인으로 객체 넣으면 계속 랜더링되는 문제.)\r\n    const style=useMemo(()=>({\r\n        marginTop:10\r\n    }), []);\r\n\r\n    const formWrapper=useMemo(()=>({\r\n        padding:10\r\n    }), []);\r\n\r\n\r\n    const onSubmitForm= useCallback(()=>{\r\n        //antd의 onFinish은 이미 prevent가 적용되어있으므로 안해줘도됨\r\n        console.log(id,pw);\r\n        dispatch(loginAction({id,pw}));\r\n    },[id,pw]);\r\n    return(\r\n        <>\r\n            <Form onFinish={onSubmitForm} style={formWrapper}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={pw} onChange={onChangePw} required/>\r\n                </div>\r\n                <div style={style}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n                    <Link href=\"Signup\"><a><Button>회원가입</Button></a></Link>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}