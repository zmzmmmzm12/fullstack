{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from '../reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,mBAAR,QAAiC,0BAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAC,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0BC,IAAD,IAASC,MAAD,IAAU;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAC,MAAI;AACrB,QAAMC,cAAc,GAACV,oBAAoB,EAAzC;AACA,QAAMW,WAAW,GAAE,CAACD,cAAD,EAAgBR,gBAAhB,CAAnB;AACA,QAAMU,QAAQ,GAAC,QACTf,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADE,GAETZ,mBAAmB,CAACH,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAFzB;AAIA,QAAME,KAAK,GAAClB,WAAW,CAACG,OAAD,EAAUc,QAAV,CAAvB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAeJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAf;AACA,SAAOY,KAAP;AACH,CAVD;;AAYA,MAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;AAACQ,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from '../reducers/rootReducer';\r\nimport {composeWithDevTools} from'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware=({dispatch, getState})=> (next)=>(action)=>{\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\nconst configureStore=()=>{\r\n    const sagaMiddleware=createSagaMiddleware();\r\n    const middlewares= [sagaMiddleware,loggerMiddleware];\r\n    const enhancer=process.env.NODE_ENV==='production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n\r\n    const store=createStore(reducer, enhancer);\r\n    store.sagaTask=sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore, {debug:process.env.NODE_ENV==='development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}