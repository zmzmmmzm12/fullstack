{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper'; //백엔드한테 데이터 구조 미리 받아놓기\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\n    }, {\n      src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\n    }, {\n      src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이네요'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '고양이'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostDone: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: false,\n        addCommentError: action.error\n      });\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n      ;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/reducers/postReducer.js"],"names":["HYDRATE","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","postReducer","state","action","error"],"mappings":"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","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\n\r\n\r\n//백엔드한테 데이터 구조 미리 받아놓기\r\nexport const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'제로초'\r\n        },\r\n        content: '첫번째 게시글 #해시태그 #익스프레스',\r\n        Images:[{\r\n            src:'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\r\n        },\r\n        {\r\n            src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\r\n        },\r\n        {\r\n            src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\r\n        }],\r\n        Comments:[{\r\n            User:{\r\n                nickname: 'nero'\r\n            },\r\n            content: '우와 개정판이네요'\r\n        },\r\n        {\r\n            User:{\r\n                nickname: 'hero'\r\n            },\r\n            content: '고양이'\r\n        }]\r\n    }],\r\n    imagePaths:[],\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null\r\n}\r\n\r\nexport const ADD_POST_REQUEST='ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS='ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE='ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n})\r\n\r\nconst dummyPost={\r\n    id:2,\r\n    content:'더미데이터',\r\n    User:{\r\n        id:1,\r\n        nickname:'제로초'\r\n    },\r\n    Images:[],\r\n    Comments: []\r\n}\r\n\r\nconst postReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                addPostLoading:true,\r\n                addPostDone:false,\r\n                addPostError:null\r\n            }\r\n        case ADD_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts: [dummyPost, ...state.mainPosts],\r\n                addPostLoading:false,\r\n                addPostDone:true\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading:false,\r\n                addPostDone:false,\r\n                addPostError:action.error\r\n            }\r\n        \r\n        case ADD_COMMENT_REQUEST:\r\n            return{\r\n                ...state,\r\n                addCommentLoading:true,\r\n                addCommentDone:false,\r\n                addCommentError:null\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                addCommentLoading:false,\r\n                addCommentDone:true\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                ...state,\r\n                addCommentLoading:false,\r\n                addCommentDone:false,\r\n                addCommentError:action.error\r\n            };\r\n\r\n        default: {\r\n            return {...state};\r\n        };\r\n    }\r\n}\r\n\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}