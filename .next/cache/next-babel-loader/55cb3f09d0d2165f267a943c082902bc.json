{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker'; //백엔드한테 데이터 구조 미리 받아놓기\n\nexport var initialState = {\n  mainPosts: [{// id:1,\n    // User:{\n    //     id:1,\n    //     nickname:'주미'\n    // },\n    // content: '첫번째 게시글 #해시태그 #익스프레스',\n    // Images:[{\n    //     id:shortId.generate(),\n    //     src:'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\n    // },\n    // {\n    //     id:shortId.generate(),\n    //     src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\n    // },\n    // {\n    //     id:shortId.generate(),\n    //     src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\n    // }],\n    // Comments:[{\n    //     id:shortId.generate(),\n    //     User:{\n    //         id:shortId.generate(),\n    //         nickname: 'nero'\n    //     },\n    //     content: '우와 개정판이네요'\n    // },\n    // {\n    //     id:shortId.generate(),\n    //     User:{\n    //         id:shortId.generate(),\n    //         nickname: 'hero'\n    //     },\n    //     content: '고양이'\n    // }]\n  }],\n  imagePaths: [],\n  hasMorePost: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n}; //initialState.mainPosts=initialState.mainPosts.concat(generateDummyPost(10));\n\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '주미'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '주미'\n    }\n  };\n};\n\nvar postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostDone = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        }), draft.removePostLoading = false, draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false, draft.removePostDone = false, draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/reducers/postReducer.js"],"names":["HYDRATE","shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePost","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","postReducer","state","action","draft","concat","length","error","unshift","post","find","v","postId","filter"],"mappings":"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","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\nimport shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\n//백엔드한테 데이터 구조 미리 받아놓기\r\nexport const initialState={\r\n    mainPosts:[{\r\n        // id:1,\r\n        // User:{\r\n        //     id:1,\r\n        //     nickname:'주미'\r\n        // },\r\n        // content: '첫번째 게시글 #해시태그 #익스프레스',\r\n        // Images:[{\r\n        //     id:shortId.generate(),\r\n        //     src:'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\r\n        // },\r\n        // {\r\n        //     id:shortId.generate(),\r\n        //     src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\r\n        // },\r\n        // {\r\n        //     id:shortId.generate(),\r\n        //     src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\r\n        // }],\r\n        // Comments:[{\r\n        //     id:shortId.generate(),\r\n        //     User:{\r\n        //         id:shortId.generate(),\r\n        //         nickname: 'nero'\r\n        //     },\r\n        //     content: '우와 개정판이네요'\r\n        // },\r\n        // {\r\n        //     id:shortId.generate(),\r\n        //     User:{\r\n        //         id:shortId.generate(),\r\n        //         nickname: 'hero'\r\n        //     },\r\n        //     content: '고양이'\r\n        // }]\r\n    }],\r\n    imagePaths:[],\r\n    hasMorePost:true,\r\n    loadPostsLoading:false,\r\n    loadPostsDone:false,\r\n    loadPostsError:null,\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null,\r\n    removePostLoading:false,\r\n    removePostDone:false,\r\n    removePostError:null,\r\n}\r\n\r\nexport const generateDummyPost=(number)=> Array(number).fill().map(()=>({\r\n    id: shortId.generate(),\r\n    User:{\r\n        id:shortId.generate(),\r\n        nickname: faker.name.findName()\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images:[{\r\n        src:faker.image.image()\r\n    }],\r\n    Comments:[{\r\n        User:{\r\n            id:shortId.generate(),\r\n            nickname: faker.name.findName()\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n}))\r\n\r\n//initialState.mainPosts=initialState.mainPosts.concat(generateDummyPost(10));\r\n\r\nexport const LOAD_POSTS_REQUEST='LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS='LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE='LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST='ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS='ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE='ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST='REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS='REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE='REMOVE_POST_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n})\r\n\r\nconst dummyPost=(data)=>({\r\n    id:data.id,\r\n    content:data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'주미'\r\n    },\r\n    Images:[],\r\n    Comments: []\r\n})\r\n\r\nconst dummyComment=(data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'주미'\r\n    }\r\n})\r\n\r\nconst postReducer=(state=initialState,action)=> produce(state,(draft)=>{\r\n        switch(action.type){\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading=true;\r\n                draft.loadPostsDone=false;\r\n                draft.loadPostsError=null;\r\n                break;\r\n                \r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.mainPosts=action.data.concat(draft.mainPosts);\r\n                draft.loadPostsLoading=false;\r\n                draft.loadPostsDone=true;\r\n                draft.hasMorePost=draft.mainPosts.length<50;\r\n                break;\r\n                \r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading=false;\r\n                draft.loadPostsDone=false;\r\n                draft.loadPostsError=action.error;\r\n                break;\r\n\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading=true;\r\n                draft.addPostDone=false;\r\n                draft.addPostError=null;\r\n                break;\r\n                \r\n            case ADD_POST_SUCCESS:\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=true;\r\n                break;\r\n                \r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=false;\r\n                draft.addPostError=action.error;\r\n                break;\r\n            \r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading=true;\r\n                draft.addCommentDone=false;\r\n                draft.addCommentError=null;\r\n                break;\r\n\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post=draft.mainPosts.find((v)=>v.id===action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentDone=true;\r\n                break;\r\n            \r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentDone=false;\r\n                draft.addCommentError=action.error;\r\n                break;\r\n    \r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading=true;\r\n                draft.removePostDone=false;\r\n                draft.removePostError=null;\r\n                break;\r\n\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts= draft.mainPosts.filter((v)=>v.id!==action.data),\r\n                draft.removePostLoading=false,\r\n                draft.removePostDone=true;\r\n                break;\r\n\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading=false,\r\n                draft.removePostDone=false,\r\n                draft.removePostError=action.error;\r\n                break;\r\n\r\n            default: break;\r\n        }\r\n})\r\n\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}