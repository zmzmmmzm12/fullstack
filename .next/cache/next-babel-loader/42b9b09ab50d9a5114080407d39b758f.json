{"ast":null,"code":"import { all, call, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, REMOVE_POST_REQUEST } from '../reducers/postReducer';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/userReducer';\nimport shortId from 'shortid';\n\nfunction addPostAPI(data) {\n  return axios.post('./api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate(); //const result=yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`./api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000); //const result=yield call(addCommentAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction removePostAPI(data) {\n  return axios.delete('./api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate(); //const result=yield call(removePostAPI, action.data);\n\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost)]);\n}","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/sagas/post.js"],"names":["all","call","fork","takeLatest","put","delay","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","REMOVE_POST_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","shortId","addPostAPI","data","post","addPost","action","id","generate","type","content","err","response","watchAddPost","addCommentAPI","postId","addComment","watchAddComment","removePostAPI","delete","removePost","watchRemovePost","postSaga"],"mappings":"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","sourcesContent":["import {all,call,fork, takeLatest, put, delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST,\r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS,\r\n    REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS,REMOVE_POST_REQUEST\r\n} from '../reducers/postReducer';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/userReducer';\r\nimport shortId from 'shortid';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('./api/post',data);\r\n}\r\nfunction* addPost(action){\r\n   try{\r\n    yield delay(1000);\r\n    const id=shortId.generate();\r\n    //const result=yield call(addPostAPI, action.data);\r\n    yield put({\r\n        type: ADD_POST_SUCCESS,\r\n        data:{\r\n            id,\r\n            content:action.data\r\n        }\r\n    })\r\n    yield put({\r\n        type:ADD_POST_TO_ME,\r\n        data:id\r\n    })\r\n   }\r\n   catch(err){ \r\n    yield put({\r\n        type: ADD_POST_FAILURE,\r\n        data: err.response.data\r\n    })\r\n   }\r\n}\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI(data){\r\n    return axios.post(`./api/post/${data.postId}/comment`,data);\r\n}\r\nfunction* addComment(action){\r\n   try{\r\n    yield delay(1000);\r\n    //const result=yield call(addCommentAPI, action.data);\r\n    yield put({\r\n        type: ADD_COMMENT_SUCCESS,\r\n        data: action.data\r\n    })\r\n   }\r\n   catch(err){ \r\n    yield put({\r\n        type: ADD_COMMENT_FAILURE,\r\n        data: err.response.data\r\n    })\r\n   }\r\n}\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction removePostAPI(data){\r\n    return axios.delete('./api/post',data);\r\n}\r\nfunction* removePost(action){\r\n   try{\r\n    yield delay(1000);\r\n    const id=shortId.generate();\r\n    //const result=yield call(removePostAPI, action.data);\r\n    yield put({\r\n        type: REMOVE_POST_SUCCESS,\r\n        data:action.data\r\n    })\r\n    yield put({\r\n        type:REMOVE_POST_OF_ME,\r\n        data:action.data\r\n    })\r\n   }\r\n   catch(err){ \r\n    yield put({\r\n        type: REMOVE_POST_FAILURE,\r\n        data: err.response.data\r\n    })\r\n   }\r\n}\r\nfunction* watchRemovePost(){\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchRemovePost)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}