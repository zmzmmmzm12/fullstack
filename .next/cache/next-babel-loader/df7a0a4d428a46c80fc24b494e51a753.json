{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport userReducer from './userReducer';\nimport postReducer from './postReducer';\nimport { combineReducers } from 'redux'; //이전상태, action을 통해 다음상태를 만들어내는 함수\n\nconst rootReducer = combineReducers({\n  root: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/reducers/rootReducer.js"],"names":["HYDRATE","userReducer","postReducer","combineReducers","rootReducer","root","state","action","type","payload","user","post"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,eAAR,QAA8B,OAA9B,C,CAGA;;AACA,MAAMC,WAAW,GAACD,eAAe,CAAC;AAC9BE,EAAAA,IAAI,EAAE,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAmB;AACzB,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKR,OAAL;AACI,+CAAUM,KAAV,GAAmBC,MAAM,CAACE,OAA1B;;AAEJ;AACI,eAAOH,KAAP;AALR;AAOC,GAT6B;AAU9BI,EAAAA,IAV8B;AAW9BC,EAAAA;AAX8B,CAAD,CAAjC;AAcA,eAAeP,WAAf","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\nimport userReducer from './userReducer';\r\nimport postReducer from './postReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\n\r\n//이전상태, action을 통해 다음상태를 만들어내는 함수\r\nconst rootReducer=combineReducers({\r\n    root: (state={},action)=>{\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            return{...state,...action.payload }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}