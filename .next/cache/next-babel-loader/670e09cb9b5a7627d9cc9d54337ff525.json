{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\LoginForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useState, useMemo } from 'react';\nimport Link from 'next/link';\nimport useInput from '../hooks/useInput';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers/rootReducer';\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch(); //컴포넌트에 props로 넘기는 함수는 useCallback꼭 쓰기=>최적화\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      pw = _useInput4[0],\n      onChangePw = _useInput4[1]; //useMemo는 함수를 콜백함. style을 useMemo로 만드는 대신 css를 따로 추가해줘도됨\n  //리랜더링 해줘도 최적화됨(jsx에 인라인으로 객체 넣으면 계속 랜더링되는 문제.)\n\n\n  var style = useMemo(function () {\n    return {\n      marginTop: 10\n    };\n  }, []);\n  var formWrapper = useMemo(function () {\n    return {\n      padding: 10\n    };\n  }, []);\n  var onSubmitForm = useCallback(function () {\n    //antd의 onFinish은 이미 prevent가 적용되어있으므로 안해줘도됨\n    dispatch(loginAction({\n      id: id,\n      pw: pw\n    }));\n  }, [id, pw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onSubmitForm,\n      style: formWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: id,\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: pw,\n          onChange: onChangePw,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"Signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 44\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"F4hbzPXeNxdYL54mi0JTE5dDHaA=\", false, function () {\n  return [useDispatch, useInput, useInput];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/LoginForm.js"],"names":["Form","Input","Button","useCallback","useState","useMemo","Link","useInput","useDispatch","loginAction","LoginForm","dispatch","id","onChangeId","pw","onChangePw","style","marginTop","formWrapper","padding","onSubmitForm"],"mappings":"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","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport { useCallback, useState, useMemo } from 'react';\r\nimport Link from 'next/link';\r\nimport useInput from '../hooks/useInput';\r\nimport {useDispatch} from 'react-redux';\r\nimport {loginAction} from '../reducers/rootReducer';\r\n\r\nconst LoginForm=()=>{\r\n    const dispatch=useDispatch();\r\n\r\n    //컴포넌트에 props로 넘기는 함수는 useCallback꼭 쓰기=>최적화\r\n    const [id,onChangeId]=useInput('');\r\n    const [pw,onChangePw]=useInput('');\r\n\r\n    //useMemo는 함수를 콜백함. style을 useMemo로 만드는 대신 css를 따로 추가해줘도됨\r\n    //리랜더링 해줘도 최적화됨(jsx에 인라인으로 객체 넣으면 계속 랜더링되는 문제.)\r\n    const style=useMemo(()=>({\r\n        marginTop:10\r\n    }), []);\r\n\r\n    const formWrapper=useMemo(()=>({\r\n        padding:10\r\n    }), []);\r\n\r\n\r\n    const onSubmitForm= useCallback(()=>{\r\n        //antd의 onFinish은 이미 prevent가 적용되어있으므로 안해줘도됨\r\n        dispatch(loginAction({id,pw}));\r\n    },[id,pw]);\r\n    return(\r\n        <>\r\n            <Form onFinish={onSubmitForm} style={formWrapper}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={pw} onChange={onChangePw} required/>\r\n                </div>\r\n                <div style={style}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n                    <Link href=\"Signup\"><a><Button>회원가입</Button></a></Link>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}