{"ast":null,"code":"import { all, call, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/postReducer';\n\nfunction addPostAPI(data) {\n  return axios.post('./api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); //const result=yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI(data) {\n  return axios.comment('./api/post', data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000); //const result=yield call(addCommentAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/sagas/post.js"],"names":["all","call","fork","takeLatest","put","delay","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","addPostAPI","data","post","addPost","action","type","result","err","response","watchAddPost","addCommentAPI","comment","addComment","watchAddComment","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,GAAnC,EAAwCC,KAAxC,QAAoD,oBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,EAEIC,mBAFJ,EAEyBC,mBAFzB,EAE6CC,mBAF7C,QAGO,yBAHP;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOR,KAAK,CAACS,IAAN,CAAW,YAAX,EAAwBD,IAAxB,CAAP;AACH;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACtB,MAAG;AACF,UAAMZ,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMD,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEX,gBADA;AAENO,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIA,GAPD,CAQA,OAAMM,GAAN,EAAU;AACT,UAAMhB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEV,gBADA;AAENM,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIA;AACH;;AACD,UAAUQ,YAAV,GAAwB;AACpB,QAAMnB,UAAU,CAACM,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AAED,SAASO,aAAT,CAAuBT,IAAvB,EAA4B;AACxB,SAAOR,KAAK,CAACkB,OAAN,CAAc,YAAd,EAA2BV,IAA3B,CAAP;AACH;;AACD,UAAUW,UAAV,CAAqBR,MAArB,EAA4B;AACzB,MAAG;AACF,UAAMZ,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMD,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEN,mBADA;AAENE,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIA,GAPD,CAQA,OAAMM,GAAN,EAAU;AACT,UAAMhB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAER,mBADA;AAENI,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIA;AACH;;AACD,UAAUY,eAAV,GAA2B;AACvB,QAAMvB,UAAU,CAACQ,mBAAD,EAAsBc,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUE,QAAV,GAAoB;AAC/B,QAAM3B,GAAG,CAAC,CACNE,IAAI,CAACoB,YAAD,CADE,EAENpB,IAAI,CAACwB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all,call,fork, takeLatest, put, delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST,\r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS\r\n} from '../reducers/postReducer';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('./api/post',data);\r\n}\r\nfunction* addPost(action){\r\n   try{\r\n    yield delay(1000);\r\n    //const result=yield call(addPostAPI, action.data);\r\n    yield put({\r\n        type: ADD_POST_SUCCESS,\r\n        data: result.data\r\n    })\r\n   }\r\n   catch(err){ \r\n    yield put({\r\n        type: ADD_POST_FAILURE,\r\n        data: err.response.data\r\n    })\r\n   }\r\n}\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI(data){\r\n    return axios.comment('./api/post',data);\r\n}\r\nfunction* addComment(action){\r\n   try{\r\n    yield delay(1000);\r\n    //const result=yield call(addCommentAPI, action.data);\r\n    yield put({\r\n        type: ADD_COMMENT_SUCCESS,\r\n        data: result.data\r\n    })\r\n   }\r\n   catch(err){ \r\n    yield put({\r\n        type: ADD_COMMENT_FAILURE,\r\n        data: err.response.data\r\n    })\r\n   }\r\n}\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}