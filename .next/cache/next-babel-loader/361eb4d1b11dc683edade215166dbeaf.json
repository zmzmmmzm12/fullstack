{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport shortId from 'shortid';\nimport produce from 'immer'; //백엔드한테 데이터 구조 미리 받아놓기\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '주미'\n    },\n    content: '첫번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\n    }, {\n      id: shortId.generate(),\n      src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 개정판이네요'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '고양이'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '주미'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '주미'\n    }\n  };\n};\n\nvar postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostDone = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        addCommentDone = false;\n        addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        }), draft.removePostLoading = false, draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false, draft.removePostDone = false, draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/reducers/postReducer.js"],"names":["HYDRATE","shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","postReducer","state","action","draft","unshift","error","post","find","v","postId","filter"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,OAApB,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAC;AACtBC,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,EAAE,EAAC,CADI;AAEPC,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAFE;AAMPC,IAAAA,OAAO,EAAE,sBANF;AAOPC,IAAAA,MAAM,EAAC,CAAC;AACJJ,MAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADC;AAEJC,MAAAA,GAAG,EAAC;AAFA,KAAD,EAIP;AACIN,MAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADP;AAEIC,MAAAA,GAAG,EAAE;AAFT,KAJO,EAQP;AACIN,MAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADP;AAEIC,MAAAA,GAAG,EAAE;AAFT,KARO,CAPA;AAmBPC,IAAAA,QAAQ,EAAC,CAAC;AACNP,MAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADG;AAENJ,MAAAA,IAAI,EAAC;AACDD,QAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADF;AAEDH,QAAAA,QAAQ,EAAE;AAFT,OAFC;AAMNC,MAAAA,OAAO,EAAE;AANH,KAAD,EAQT;AACIH,MAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADP;AAEIJ,MAAAA,IAAI,EAAC;AACDD,QAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADF;AAEDH,QAAAA,QAAQ,EAAE;AAFT,OAFT;AAMIC,MAAAA,OAAO,EAAE;AANb,KARS;AAnBF,GAAD,CADY;AAqCtBK,EAAAA,UAAU,EAAC,EArCW;AAsCtBC,EAAAA,cAAc,EAAC,KAtCO;AAuCtBC,EAAAA,WAAW,EAAC,KAvCU;AAwCtBC,EAAAA,YAAY,EAAC,IAxCS;AAyCtBC,EAAAA,iBAAiB,EAAC,KAzCI;AA0CtBC,EAAAA,cAAc,EAAC,KA1CO;AA2CtBC,EAAAA,eAAe,EAAC,IA3CM;AA4CtBC,EAAAA,iBAAiB,EAAC,KA5CI;AA6CtBC,EAAAA,cAAc,EAAC,KA7CO;AA8CtBC,EAAAA,eAAe,EAAC;AA9CM,CAAnB;AAiDP,OAAO,IAAMC,gBAAgB,GAAC,kBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAC,kBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAC,kBAAvB;AAEP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AAEP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AAEP,OAAO,IAAMC,OAAO,GAAC,SAARA,OAAQ,CAACC,IAAD;AAAA,SAAS;AAC1BC,IAAAA,IAAI,EAAEX,gBADoB;AAE1BU,IAAAA,IAAI,EAAJA;AAF0B,GAAT;AAAA,CAAd;AAKP,OAAO,IAAME,UAAU,GAAC,SAAXA,UAAW,CAACF,IAAD;AAAA,SAAS;AAC7BC,IAAAA,IAAI,EAAER,mBADuB;AAE7BO,IAAAA,IAAI,EAAJA;AAF6B,GAAT;AAAA,CAAjB;;AAKP,IAAMG,SAAS,GAAC,SAAVA,SAAU,CAACH,IAAD;AAAA,SAAS;AACrB5B,IAAAA,EAAE,EAAC4B,IAAI,CAAC5B,EADa;AAErBG,IAAAA,OAAO,EAACyB,IAAI,CAACzB,OAFQ;AAGrBF,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAHgB;AAOrBE,IAAAA,MAAM,EAAC,EAPc;AAQrBG,IAAAA,QAAQ,EAAE;AARW,GAAT;AAAA,CAAhB;;AAWA,IAAMyB,YAAY,GAAC,SAAbA,YAAa,CAACJ,IAAD;AAAA,SAAS;AACxB5B,IAAAA,EAAE,EAACJ,OAAO,CAACS,QAAR,EADqB;AAExBF,IAAAA,OAAO,EAACyB,IAFgB;AAGxB3B,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR;AAHmB,GAAT;AAAA,CAAnB;;AASA,IAAM+B,WAAW,GAAC,SAAZA,WAAY;AAAA,MAACC,KAAD,uEAAOpC,YAAP;AAAA,MAAoBqC,MAApB;AAAA,SAA8BtC,OAAO,CAACqC,KAAD,EAAO,UAACE,KAAD,EAAS;AAC/D,YAAOD,MAAM,CAACN,IAAd;AACI,WAAKX,gBAAL;AACIkB,QAAAA,KAAK,CAAC3B,cAAN,GAAqB,IAArB;AACA2B,QAAAA,KAAK,CAAC1B,WAAN,GAAkB,KAAlB;AACA0B,QAAAA,KAAK,CAACzB,YAAN,GAAmB,IAAnB;AACA;;AAEJ,WAAKQ,gBAAL;AACIiB,QAAAA,KAAK,CAACrC,SAAN,CAAgBsC,OAAhB,CAAwBN,SAAS,CAACI,MAAM,CAACP,IAAR,CAAjC;AACAQ,QAAAA,KAAK,CAAC3B,cAAN,GAAqB,KAArB;AACA2B,QAAAA,KAAK,CAAC1B,WAAN,GAAkB,IAAlB;AACA;;AAEJ,WAAKU,gBAAL;AACIgB,QAAAA,KAAK,CAAC3B,cAAN,GAAqB,KAArB;AACA2B,QAAAA,KAAK,CAAC1B,WAAN,GAAkB,KAAlB;AACA0B,QAAAA,KAAK,CAACzB,YAAN,GAAmBwB,MAAM,CAACG,KAA1B;AACA;;AAEJ,WAAKjB,mBAAL;AACIe,QAAAA,KAAK,CAACxB,iBAAN,GAAwB,IAAxB;AACAC,QAAAA,cAAc,GAAC,KAAf;AACAC,QAAAA,eAAe,GAAC,IAAhB;AACA;;AAEJ,WAAKQ,mBAAL;AACI,YAAMiB,IAAI,GAACH,KAAK,CAACrC,SAAN,CAAgByC,IAAhB,CAAqB,UAACC,CAAD;AAAA,iBAAKA,CAAC,CAACzC,EAAF,KAAOmC,MAAM,CAACP,IAAP,CAAYc,MAAxB;AAAA,SAArB,CAAX;AACAH,QAAAA,IAAI,CAAChC,QAAL,CAAc8B,OAAd,CAAsBL,YAAY,CAACG,MAAM,CAACP,IAAP,CAAYzB,OAAb,CAAlC;AACAiC,QAAAA,KAAK,CAACxB,iBAAN,GAAwB,KAAxB;AACAwB,QAAAA,KAAK,CAACvB,cAAN,GAAqB,IAArB;AACA;;AAEJ,WAAKU,mBAAL;AACIa,QAAAA,KAAK,CAACxB,iBAAN,GAAwB,KAAxB;AACAwB,QAAAA,KAAK,CAACvB,cAAN,GAAqB,KAArB;AACAuB,QAAAA,KAAK,CAACtB,eAAN,GAAsBqB,MAAM,CAACG,KAA7B;AACA;;AAEJ,WAAKd,mBAAL;AACIY,QAAAA,KAAK,CAACrB,iBAAN,GAAwB,IAAxB;AACAqB,QAAAA,KAAK,CAACpB,cAAN,GAAqB,KAArB;AACAoB,QAAAA,KAAK,CAACnB,eAAN,GAAsB,IAAtB;AACA;;AAEJ,WAAKQ,mBAAL;AACIW,QAAAA,KAAK,CAACrC,SAAN,GAAiBqC,KAAK,CAACrC,SAAN,CAAgB4C,MAAhB,CAAuB,UAACF,CAAD;AAAA,iBAAKA,CAAC,CAACzC,EAAF,KAAOmC,MAAM,CAACP,IAAnB;AAAA,SAAvB,CAAjB,EACAQ,KAAK,CAACrB,iBAAN,GAAwB,KADxB,EAEAqB,KAAK,CAACpB,cAAN,GAAqB,IAFrB;AAGA;;AAEJ,WAAKU,mBAAL;AACIU,QAAAA,KAAK,CAACrB,iBAAN,GAAwB,KAAxB,EACAqB,KAAK,CAACpB,cAAN,GAAqB,KADrB,EAEAoB,KAAK,CAACnB,eAAN,GAAsBkB,MAAM,CAACG,KAF7B;AAGA;;AAEJ;AAAS;AAxDb;AA0DP,GA3DsD,CAArC;AAAA,CAAlB;;AA6DA,eAAeL,WAAf","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\nimport shortId from 'shortid';\r\nimport produce from 'immer';\r\n\r\n//백엔드한테 데이터 구조 미리 받아놓기\r\nexport const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'주미'\r\n        },\r\n        content: '첫번째 게시글 #해시태그 #익스프레스',\r\n        Images:[{\r\n            id:shortId.generate(),\r\n            src:'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_1280.png'\r\n        },\r\n        {\r\n            id:shortId.generate(),\r\n            src: 'https://cdn.pixabay.com/photo/2014/11/30/14/11/cat-551554_960_720.jpg'\r\n        },\r\n        {\r\n            id:shortId.generate(),\r\n            src: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_1280.jpg'\r\n        }],\r\n        Comments:[{\r\n            id:shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname: 'nero'\r\n            },\r\n            content: '우와 개정판이네요'\r\n        },\r\n        {\r\n            id:shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname: 'hero'\r\n            },\r\n            content: '고양이'\r\n        }]\r\n    }],\r\n    imagePaths:[],\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null,\r\n    removePostLoading:false,\r\n    removePostDone:false,\r\n    removePostError:null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST='ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS='ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE='ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST='REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS='REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE='REMOVE_POST_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n})\r\n\r\nconst dummyPost=(data)=>({\r\n    id:data.id,\r\n    content:data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'주미'\r\n    },\r\n    Images:[],\r\n    Comments: []\r\n})\r\n\r\nconst dummyComment=(data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'주미'\r\n    }\r\n})\r\n\r\nconst postReducer=(state=initialState,action)=> produce(state,(draft)=>{\r\n        switch(action.type){\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading=true;\r\n                draft.addPostDone=false;\r\n                draft.addPostError=null;\r\n                break;\r\n                \r\n            case ADD_POST_SUCCESS:\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=true;\r\n                break;\r\n                \r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=false;\r\n                draft.addPostError=action.error;\r\n                break;\r\n            \r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading=true;\r\n                addCommentDone=false;\r\n                addCommentError=null;\r\n                break;\r\n\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post=draft.mainPosts.find((v)=>v.id===action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentDone=true;\r\n                break;\r\n            \r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentDone=false;\r\n                draft.addCommentError=action.error;\r\n                break;\r\n    \r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading=true;\r\n                draft.removePostDone=false;\r\n                draft.removePostError=null;\r\n                break;\r\n\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts= draft.mainPosts.filter((v)=>v.id!==action.data),\r\n                draft.removePostLoading=false,\r\n                draft.removePostDone=true;\r\n                break;\r\n\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading=false,\r\n                draft.removePostDone=false,\r\n                draft.removePostError=action.error;\r\n                break;\r\n\r\n            default: break;\r\n        }\r\n})\r\n\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}