{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82107\\\\Desktop\\\\\\uAC2D\\uC774\\uC5B4_\\uC0AC\\uC804\\uC900\\uBE44\\\\\\uAC15\\uC758\\uB530\\uB77C\\uD558\\uAE30\\\\\\uC6F9\\uAC8C\\uC784\\uC744 \\uB9CC\\uB4E4\\uBA70 \\uBC30\\uC6B0\\uB294 \\uB9AC\\uC561\\uD2B8\\\\fullStack\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../reducers/postReducer';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var imageInput = useRef();\n  var onClickImgUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickImgUpload,\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            \"float\": 'right'\n          },\n          htmlType: \"submit\",\n          children: \"\\uC9F9\\uC9F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map(function (v) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v,\n              style: {\n                width: '200px'\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC81C\\uAC70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, _this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(PostForm, \"K8GMlG6fO3Edh/pYZj211Wuy4VU=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/82107/Desktop/갭이어_사전준비/강의따라하기/웹게임을 만들며 배우는 리액트/fullStack/front/components/PostForm.js"],"names":["Form","Input","Button","useCallback","useState","useRef","useEffect","useDispatch","useSelector","useInput","addPost","PostForm","state","postReducer","imagePaths","addPostDone","dispatch","text","onChangeText","setText","onSubmit","imageInput","onClickImgUpload","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport { useCallback, useState,useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport {addPost} from '../reducers/postReducer';\r\n\r\nconst PostForm=()=>{\r\n    const {imagePaths, addPostDone}=useSelector((state)=>state.postReducer);\r\n    const dispatch=useDispatch();\r\n    const [text,onChangeText,setText]=useInput('');\r\n    \r\n    useEffect(()=>{\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    }, [addPostDone]);\r\n    \r\n    const onSubmit=useCallback(()=>{\r\n        dispatch(addPost(text));\r\n    }, [text]);\r\n\r\n    const imageInput=useRef();\r\n    const onClickImgUpload=useCallback(()=>{\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    return(\r\n        <>\r\n            <Form style={{margin:'10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n                <Input.TextArea\r\n                    value={text}\r\n                    onChange={onChangeText}\r\n                    maxLength={140}\r\n                    placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n                <div>\r\n                    <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                    <Button onClick={onClickImgUpload}>이미지 업로드</Button>\r\n                    <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\">짹짹</Button>\r\n                </div>\r\n                <div>\r\n                    {imagePaths.map((v)=>(\r\n                        <div key={v} style={{display:'inline-block'}}>\r\n                            <img src={v} style={{width:'200px'}} alt={v}/>\r\n                            <div>\r\n                                <Button>제거</Button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            \r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}